{"ast":null,"code":"import { FETCH_ALL, LIKE, CREATE, DELETE, UPDATE } from \"../constants/actionTypes\";\n\nconst posts = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n};\n\nexport default posts;","map":{"version":3,"sources":["/home/vinciis/Documents/Webapp/React/MEMORIES_PROJECT/client/src/reducers/posts.js"],"names":["FETCH_ALL","LIKE","CREATE","DELETE","UPDATE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,MAA1C,QAAwD,0BAAxD;;AAGA,MAAMC,KAAK,GAAG,CAACA,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AACJ,SAAKP,IAAL;AACI,aAAOI,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAKR,MAAL;AACI,aAAO,CAAE,GAAGG,KAAL,EAAYC,MAAM,CAACE,OAAnB,CAAP;;AACJ,SAAKJ,MAAL;AACI,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAKP,MAAL;AACI,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAgBA,eAAeA,KAAf","sourcesContent":["import { FETCH_ALL, LIKE, CREATE, DELETE, UPDATE } from \"../constants/actionTypes\";\n\n\nconst posts = (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case LIKE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case CREATE:\n            return [ ...posts, action.payload];\n        case UPDATE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    } \n};\nexport default posts\n"]},"metadata":{},"sourceType":"module"}