{"ast":null,"code":"var _jsxFileName = \"/home/vinciis/Documents/Webapp/React/MEMORIES_PROJECT/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(true);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log('Google Sign In was unsuccessful. Try again later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"V3DUafxZY04P9WmLxNIv+XDGflg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/vinciis/Documents/Webapp/React/MEMORIES_PROJECT/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","LockOutlinedIcon","useStyles","Input","Icon","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","handleShowPassword","prevShowPassword","handleSubmit","handleChange","switchMode","prevIsSignup","googleSuccess","res","console","log","googleFailure"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAmE,mBAAnE;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAmCf,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMkB,kBAAkB,GAAG,MAAMH,eAAe,CAAEI,gBAAD,IAAsB,CAACA,gBAAxB,CAAhD;;AAEA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACrBL,IAAAA,WAAW,CAAEM,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAL,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAHD;;AAKA,QAAMM,aAAa,GAAIC,GAAD,IAAS;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAFD;;AAIA,QAAMG,aAAa,GAAE,MAAM;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CA7ED;;GAAMf,I;UACcH,S;;;KADdG,I;AA+EN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\n\nconst Auth = () => {\n    const classes = useStyles();\n\n    const [showPassword, setShowPassword] =  useState(false);\n    const [isSignup, setIsSignup] = useState(true);\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const handleSubmit = () => {\n\n    };\n    const handleChange = () => {\n\n    };\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        handleShowPassword(false);\n    };\n\n    const googleSuccess = (res) => {\n        console.log(res);\n    };\n\n    const googleFailure= () => {\n        console.log('Google Sign In was unsuccessful. Try again later');\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {/* <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        { isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n                    </Grid>\n                    <GoogleLogin \n                        clientId=\"Google ID\"\n                        render={(renderProps) => (\n                            <Button \n                                className={classes.googleButton} \n                                color=\"primary\" \n                                fullWidth \n                                onClick={renderProps.onClick} \n                                disabled={renderProps.disabled} \n                                startIcon={<Icon />} \n                                variant=\"contained\"\n                            >Google SignIn</Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        {isSignup ? \"SIgn Up\" : \"Sign In\"}\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                { isSignup ? \"Already have an account? Sign In\" : \"Do not have an account? Sign Up\" }\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper> */}\n        </Container>\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}