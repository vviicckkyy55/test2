{"ast":null,"code":"var _jsxFileName = \"/home/vinciis/Documents/Webapp/React/MEMORIES_PROJECT/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: 'classes.root classes.form',\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"2zIanRShtTXjiHeXGuTKoWkqLH0=\", true, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/vinciis/Documents/Webapp/React/MEMORIES_PROJECT/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","useSelector","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post]);\n\n    const clear = () => {\n        setCurrentId(0);\n        setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (currentId === 0) {\n            dispatch(createPost(postData));\n            clear();\n        } else {\n            dispatch(updatePost(currentId, postData));\n            clear();\n        }\n    };\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={'classes.root classes.form'} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a Memory</Typography>\n                <TextField\n                    name=\"title\"\n                    variant=\"outlined\"\n                    label=\"Title\"\n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => setPostData({ ...postData,  title: e.target.value })}\n                />\n                <TextField\n                    name=\"message\"\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => setPostData({ ...postData,  message: e.target.value })}\n                />\n                <TextField\n                    name=\"tags\"\n                    variant=\"outlined\"\n                    label=\"Tags\"\n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({base64}) => setPostData(\n                            { ...postData, selectedFile: base64 })} />\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}